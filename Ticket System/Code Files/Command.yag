{{$ID := "cticket_"}}
{{$DB := ""}}
{{$TChannel := ""}}
{{$TOwner := ""}}
{{$TState := ""}}
{{$TPower := ""}}
{{$TSubject := ""}}
{{$TCompose := ""}}
{{$TLastReason := ""}}
{{$TTopMessage := ""}}
{{$TUsers := (cslice )}}
{{$THadUsers := (cslice )}}

{{try}}
	{{$DB = (dbGet .Channel.ID "TicketInfo").Value}}
	{{$TChannel = $DB.TChannel}}
	{{$TOwner = $DB.TOwner}}
	{{$TState = $DB.TState}}
	{{$TPower = $DB.TPower}}
	{{$TSubject = $DB.TSubject}}
	{{$TCompose = $DB.TCompose}}
	{{$TLastReason = $DB.TLastReason}}
	{{$TTopMessage = $DB.TTopMessage}}
	{{$TUsers = $DB.TUsers}}
	{{$THadUsers = $DB.THadUsers}}
{{catch}}
	{{/* Do Nothing */}}
{{end}}

{{$Flag := ""}}
{{ $Args := (len .CmdArgs) }}
{{ if eq $Args 1}}
	{{ $Flag = (lower (index .CmdArgs 0))}}
{{ end }}

{{$NoDBFound := print "I wasn't able to find any Database for this channel!"}}

{{$TicketEmbed := cembed "description" "-# To create a ticket, Click the ‚Äúüìù Create Ticket‚Äù button below. It'll open a private channel for you with server staff." "author" (sdict "name" "Contact Staff - Privately") "color" 0xFFFFFF}}
{{$Create := cbutton "label" "Create Ticket" "custom_id" (print $ID "create") "emoji" (sdict "name" "üìù") "style" "blue"}}
{{if eq $Flag "setup"}}
	{{sendMessage nil (complexMessage "embed" $TicketEmbed "buttons" (cslice $Create))}}
{{else if eq $Flag "top"}}
	{{if $TChannel}}
		{{sendMessage nil (complexMessage "embed" (cembed "description" (print "Here You Go: [" .Channel.Name "](<https://discord.com/channels/" .Guild.ID "/" $TChannel "/" $TTopMessage ">)") "color" 0xFFFFFF))}}
	{{else}}
		{{$NoDBFound}}
	{{end}}
{{else if eq $Flag "owner"}}
	{{if $TChannel}}
		{{sendMessage nil (complexMessage "embed" (cembed "description" (print "This ticket's Owner is <@" $TOwner ">.\n\n> -# You can copy UserID from footer.") "footer" (sdict "text" (print $TOwner)) "color" 0xFFFFFF))}}
	{{else}}
		{{$NoDBFound}}
	{{end}}
{{else if eq $Flag "state"}}
	{{if $TChannel}}
		{{sendMessage nil (complexMessage "embed" (cembed "description" (print "This ticket is in ‚Äú" $TState "‚Äù state.") "color" 0xFFFFFF))}}
	{{else}}
		{{$NoDBFound}}
	{{end}}
{{else if eq $Flag "power"}}
	{{if $TChannel}}
		{{sendMessage nil (complexMessage "embed" (cembed "description" (print "This ticket is in under ‚Äú" $TPower "‚Äù rule.") "color" 0xFFFFFF))}}
	{{else}}
		{{$NoDBFound}}
	{{end}}
{{else if eq $Flag "subject"}}
	{{if $TChannel}}
		{{$TTopEmbed := index (getMessage $TChannel $TTopMessage).Embeds 0}}
		{{sendMessage nil (complexMessage "embed" (cembed "title" $TTopEmbed.Title "description"  $TTopEmbed.Description "color"  $TTopEmbed.Color))}}
	{{else}}
		{{$NoDBFound}}
	{{end}}
{{else if eq $Flag "compose"}}
	{{if $TChannel}}
		{{$TTopEmbed := index (getMessage $TChannel $TTopMessage).Embeds 0}}
		{{sendMessage nil (complexMessage "embed" (cembed "title" $TTopEmbed.Title "description"  $TTopEmbed.Description "color"  $TTopEmbed.Color))}}
	{{else}}
		{{$NoDBFound}}
	{{end}}
{{else if eq $Flag "users"}}
	{{if $TChannel}}
		{{$Users := ""}}
		{{try}}
			{{range $TUsers}}
				{{$Users = (print $Users "<@" . ">\n")}}
			{{end}}
		{{catch}}
		{{end}}
		{{sendMessage nil (complexMessage "embed" (cembed "description" (print "Users who were added to this ticket:\n" $Users "-# Count: " (len $TUsers)) "color" 0xFFFFFF))}}
	{{else}}
		{{$NoDBFound}}
	{{end}}
{{else}}
	{{sendMessage nil (complexMessage "embed" (cembed "fields" (cslice (sdict "name" "Ticket Usage" "value" "> `setup`: To send Ticket Creator to current channel.") (sdict "name" "Ticket Only Commands:" "value" "- `top`: To get the link of top message.\n- `owner`: To get the ticket owner.\n- `state`: To get the ticket's state (Open/Close).\n- `power`: To see if ticket is AdminOnly, *staff=~~AdminOnly~~*.\n- `subject`:  To get the link of top message.\n- `compose`:  To get the link of top message.\n- `users`: How many users were added to ticket.")) "color" 0xFF0000))}}
{{end}}
