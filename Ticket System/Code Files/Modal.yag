{{$LogsChannel := 00000}}

{{define "UpdateDB"}}
	{{$TChannel := index . 0}}
	{{$Action := index . 1}}
	{{$Value := index . 2}}

	{{$DB := ""}}
	{{$DB = (dbGet $TChannel "TicketInfo").Value}}

	{{$TChannel = $DB.TChannel}}
	{{$TOwner := $DB.TOwner}}
	{{$TState := $DB.TState}}
	{{$TPower := $DB.TPower}}
	{{$TSubject := $DB.TSubject}}
	{{$TCompose := $DB.TCompose}}
	{{$TLastReason := $DB.TLastReason}}
	{{$TTopMessage := $DB.TTopMessage}}
	{{$TUsers := $DB.TUsers}}
	{{$THadUsers := $DB.THadUsers}}

	{{if eq $Action "Channel"}}
		{{$TChannel = $Value}}
	{{else if eq $Action "Owner"}}
		{{$TOwner = $Value}}
	{{else if eq $Action "State"}}
		{{$TState = $Value}}
	{{else if eq $Action "Power"}}
		{{$TPower = $Value}}
	{{else if eq $Action "Subject"}}
		{{$TSubject = $Value}}
	{{else if eq $Action "Compose"}}
		{{$TCompose = $Value}}
	{{else if eq $Action "LastReason"}}
		{{$TLastReason = $Value}}
	{{else if eq $Action "TopMessage"}}
		{{$TTopMessage = $Value}}
	{{else if eq $Action "Users"}}
		{{$TUsers = $Value}}
	{{else if eq $Action "HadUsers"}}
		{{$THadUsers = $Value}}
	{{end}}

	{{$Data := sdict "TChannel" $TChannel "TOwner" $TOwner "TState" $TState "TPower" $TPower "TSubject" $TSubject "TCompose" $TCompose "TLastReason" $TLastReason "TTopMessage" $TTopMessage "TUsers" $TUsers "THadUsers" $THadUsers}}
	{{dbSet $TChannel "TicketInfo" $Data}}
{{end}}

{{$ID := "cticket_"}}
{{$X := ""}}
{{$Y := ""}}
{{$DB := ""}}
{{$TChannel := ""}}
{{$TOwner := ""}}
{{$TState := ""}}
{{$TPower := ""}}
{{$TSubject := ""}}
{{$TCompose := ""}}
{{$TLastReason := ""}}
{{$TTopMessage := ""}}
{{$TUsers := cslice}}
{{$THadUsers := cslice}}

{{try}}
	{{$DB = (dbGet .Channel.ID "TicketInfo").Value}}
	{{$TChannel = $DB.TChannel}}
	{{$TOwner = $DB.TOwner}}
	{{$TState = $DB.TState}}
	{{$TPower = $DB.TPower}}
	{{$TSubject = $DB.TSubject}}
	{{$TCompose = $DB.TCompose}}
	{{$TLastReason = $DB.TLastReason}}
	{{$TTopMessage = $DB.TTopMessage}}
	{{$TUsers = $DB.TUsers}}
	{{$THadUsers = $DB.THadUsers}}
{{catch}}
	{{/* Do Nothing */}}
{{end}}

{{if eq .CustomID (print $ID "create")}}
	{{try}}
		{{$Subject := (or (index .Values 0) "`No Subject`")}}
		{{$Compose := (or (index .Values 1) "`No Compose`")}}
		{{dbSetExpire .User.ID "TemporaryTicketInfo" (cslice $Subject $Compose) 10}}
		{{$X = exec "ticket create" $Subject}}
		{{sendResponse nil (complexMessage "content" "Your Ticket was created." "buttons" (cbutton "label" "Jump To Ticket" "style" "url" "url" (print "https://discord.com/channels/" .Guild.ID "/" (slice ($X = (index (split $X " ") 4)) 2 (sub (len $X) 1)) )) "ephemeral" true)}}
	{{catch}}
		{{sendMessage nil (print "Something was wrong, Please tell this to the Moderators of this Server.\n> `" .Error "`")}}
	{{end}}
{{end}}

{{if eq .CustomID (print $ID "delete")}}
	{{sendResponse nil (complexMessage "content" (print "Ticket will be deleted <t:" (add currentTime.Unix 5) ":R>.") "ephemeral" true)}}
	{{$Y = (execTemplate "UpdateDB" (cslice .Channel.ID "LastReason" (index .Values 0)))}}
	{{if $LogsChannel}}
		{{$LogUsers := "Added Users, When ticket was closed:\n"}}
		{{range $THadUsers}}
			{{$User := (getMember .).User}}
			{{$LogUsers = (print $LogUsers $User.Username " (" $User.ID ")\n")}}
		{{end}}
		{{$LogEmbed := cembed "title" (print $TSubject) "description" (print $TCompose) "fields" (cslice (sdict "name" "Reason" "value" ((dbGet $TChannel "TicketInfo").Value).TLastReason) (sdict "name" "Information" "value" (print "Channel: " $TChannel "\nOwner: <@" $TOwner ">\nDeleted By: <@" .User.ID ">"))) "color" 0xFFFFFF}}
		{{sendMessage $LogsChannel (complexMessage "embed" $LogEmbed "file" $LogUsers)}}
	{{end}}
	{{sleep 3}}
	{{$X = exec "ticket delete" (index .Values 0)}}
	{{dbDel $TChannel "TicketInfo"}}
{{end}}

{{if eq .CustomID (print $ID "rename")}}
	{{$X = exec "ticket rename" (index .Values 0)}}
	{{$TopMessage := getMessage $TChannel $TTopMessage}}
	{{$EditEmbed := cembed "title" (index .Values 0) "description" (or (index .Values 1) (index $TopMessage.Embeds 0).Description) "fields" (cslice (sdict "name" (index (index $TopMessage.Embeds 0).Fields 0).Name "value" (index (index $TopMessage.Embeds 0).Fields 0).Value)) "color" (index $TopMessage.Embeds 0).Color "footer" (sdict "icon_url" (index $TopMessage.Embeds 0).Footer.IconURL "text" (index $TopMessage.Embeds 0).Footer.Text)}}
	{{editMessage nil $TTopMessage (complexMessageEdit "embed" $EditEmbed)}}
	{{sendResponse nil (complexMessage "content" (print "Renamed the ticket to `" (index .Values 0) "`.") "ephemeral" true)}}
{{end}}
